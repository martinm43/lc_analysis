NBA Standings Predictions Tool v1.3
Martin Miller, December 17, 2016

Summary

The NBA Standings Predictions Tool consists of four Python scripts triggered by one main script. These four scripts accomplish four functions:
*season_games_splitter - break the season into periods of analysis based on the season of interest and the dates user wants to "predict"
*Calculate input criteria for the binomial win percentages (either Burke or SRS difference)

***NOTE: on platforms where scipy isn't available, an analysis will be performed, but it will be noted the Burke method is not available. 
You should use the Burke method, and scipy in general.***

*Generate binomial win percentages based on the input criteria (either Burke or SRS difference) for the rest of the season
*Use the binomial win percentages for the remainder of the season and a vectorized python Monte Carlo simulation to produce "average wins" for each team

There are several supporting files:
*access_nba_data - for epochtime (strings to datetimes since 1970 or "UNIX time")
*morey - binominal univariate mapping functions (probabilities from differences in ratings)

Also uses the known nba_data_test.sqlite database, containing a variety of data in addition to season schedule data

This zip file can be deployed to any Python 2.7 installation with the numpy and standard packages.

V1.3:
Added in option to use old "loop" functionality as it produced playoff odds estimates and works on all platforms (Pi and phone heavily constrained due to memory)
Idea is low number of simulations can serve as crude guess.

Issues:
Source file for this season - leagues_games_2017_* - is the only source for data and must be updated manually
Research is underway as to how to use stats api through existing tools such as seemenow's nba_py API for automatic updating through the rich nba_data_test.sqlite db